
DAY-1:
LEETCODE
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321



CODE:

class Solution {
public:
    int reverse(int n) 
    {
                bool neg=n<0;
                n=abs(n);
            int r=0;
            int s=0;
            while(n>0)
            {
                r=n%10;
            if((double)INT_MAX/s<=10.0)
            return 0;
                s=s*10+r;
                n=n/10;
            }
        if(!neg)
        
            return s;
          return s*-1;
    }            
};

Day:2
Given an integer array nums and an integer val, remove all occurrences of
val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums
which are not equal to val.
Input: nums = [3,2,2,3], val = 3
Output: 2, nums = [2,2,_,_]
Explanation: Your function should return k = 2, with the first two elements of nums being 2.
It does not matter what you leave beyond the returned k (hence they are underscores).

CODE:
class Solution {
public:
    int removeElement(vector<int>& nums, int val) 
    {
        int count=0;
        for(int i=0;i < nums.size();i++)
        {
                if(nums[i]!=val)
                nums[count++]=nums[i];

        }
        return count;
    }
};

DAY 3:
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
Input: s = "anagram", t = "nagaram"
Output: true
CODE:
class Solution {
public:
    bool isAnagram(string s, string t)
     {
        sort(s.begin(),s.end());
        sort(t.begin(),t.end());
        if(s==t)
        {
            return true;
        }
        else
        return false;

        
    }
};
